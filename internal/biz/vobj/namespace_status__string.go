// Code generated by "stringer -type=NamespaceStatus -linecomment -output=namespace_status__string.go"; DO NOT EDIT.

package vobj

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[NamespaceStatusUnknown-0]
	_ = x[NamespaceStatusActive-1]
	_ = x[NamespaceStatusInactive-2]
	_ = x[NamespaceStatusDeleted-3]
}

const _NamespaceStatus_name = "NamespaceStatusUnknownNamespaceStatusActiveNamespaceStatusInactiveNamespaceStatusDeleted"

var _NamespaceStatus_index = [...]uint8{0, 22, 43, 66, 88}

func (i NamespaceStatus) String() string {
	if i < 0 || i >= NamespaceStatus(len(_NamespaceStatus_index)-1) {
		return "NamespaceStatus(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _NamespaceStatus_name[_NamespaceStatus_index[i]:_NamespaceStatus_index[i+1]]
}

// Exist if the value is in the range of the constant.
func (i NamespaceStatus) Exist() bool {
	return i >= 0 && i < NamespaceStatus(len(_NamespaceStatus_index)-1)
}

// IsUnknown Is it NamespaceStatusUnknown
func (i NamespaceStatus) IsUnknown() bool {
	return i == NamespaceStatusUnknown
}

// IsActive Is it NamespaceStatusActive
func (i NamespaceStatus) IsActive() bool {
	return i == NamespaceStatusActive
}

// IsInactive Is it NamespaceStatusInactive
func (i NamespaceStatus) IsInactive() bool {
	return i == NamespaceStatusInactive
}

// IsDeleted Is it NamespaceStatusDeleted
func (i NamespaceStatus) IsDeleted() bool {
	return i == NamespaceStatusDeleted
}

// GetValue Retrieve the raw type value.
func (i NamespaceStatus) GetValue() int8 {
	if !i.Exist() {
		return 0
	}
	return int8(i)
}
