syntax = "proto3";

package rabbit.api.v1;

import "google/api/annotations.proto";
import "buf/validate/validate.proto";
import "enum/enum.proto";

option go_package = "github.com/aide-family/rabbit/pkg/api/v1;v1";
option java_multiple_files = true;
option java_package = "rabbit.api.v1";

service Template {
	rpc CreateTemplate (CreateTemplateRequest) returns (CreateTemplateReply) {
		option (google.api.http) = {
			post: "/v1/template"
			body: "*"
		};
	}
	rpc UpdateTemplate (UpdateTemplateRequest) returns (UpdateTemplateReply) {
		option (google.api.http) = {
			put: "/v1/template/{uid}"
			body: "*"
		};
	}
	rpc UpdateTemplateStatus (UpdateTemplateStatusRequest) returns (UpdateTemplateStatusReply) {
		option (google.api.http) = {
			put: "/v1/template/{uid}/status"
			body: "*"
		};
	}
	rpc DeleteTemplate (DeleteTemplateRequest) returns (DeleteTemplateReply) {
		option (google.api.http) = {
			delete: "/v1/template/{uid}"
		};
	}
	rpc GetTemplate (GetTemplateRequest) returns (TemplateItem) {
		option (google.api.http) = {
			get: "/v1/template/{uid}"
		};
	}
	rpc ListTemplate (ListTemplateRequest) returns (ListTemplateReply) {
		option (google.api.http) = {
			get: "/v1/templates"
		};
	}
}

message TemplateItem {
	string uid = 1;
	string name = 2;
	rabbit.enum.TemplateAPP app = 3;
	bytes jsonData = 4; // JSONData in Go code
	string createdAt = 5;
	string updatedAt = 6;
	rabbit.enum.GlobalStatus status = 7;
}

message CreateTemplateRequest {
	string name = 1 [(buf.validate.field).required = true];
	rabbit.enum.TemplateAPP app = 2 [(buf.validate.field).required = true];
	bytes jsonData = 3 [(buf.validate.field).required = true];
}
message CreateTemplateReply {}

message UpdateTemplateRequest {
	string uid = 1 [(buf.validate.field).required = true, (buf.validate.field).string = {
		uuid: true,
	}];
	string name = 2 [(buf.validate.field).required = true];
	rabbit.enum.TemplateAPP app = 3 [(buf.validate.field).required = true];
	bytes jsonData = 4 [(buf.validate.field).required = true];
}
message UpdateTemplateReply {}

message UpdateTemplateStatusRequest {
	string uid = 1 [(buf.validate.field).required = true, (buf.validate.field).string = {
		uuid: true,
	}];
	rabbit.enum.GlobalStatus status = 2 [(buf.validate.field).required = true, (buf.validate.field).cel = {
		expression: "this in [rabbit.enum.GlobalStatus.ENABLED, rabbit.enum.GlobalStatus.DISABLED]",
		message: "status must be in ['ENABLED', 'DISABLED']",
	}];
}
message UpdateTemplateStatusReply {}

message DeleteTemplateRequest {
	string uid = 1 [(buf.validate.field).required = true, (buf.validate.field).string = {
		uuid: true,
	}];
}
message DeleteTemplateReply {}

message GetTemplateRequest {
	string uid = 1 [(buf.validate.field).required = true, (buf.validate.field).string = {
		uuid: true,
	}];
}

message ListTemplateRequest {
	int32 page = 1 [(buf.validate.field).required = true, (buf.validate.field).cel = {
		expression: "this >= 1",
		message: "page must be greater than or equal to 1",
	}];
	int32 pageSize = 2 [(buf.validate.field).required = true, (buf.validate.field).cel = {
		expression: "this >= 1 && this <= 200",
		message: "pageSize must be greater than or equal to 1 and less than or equal to 200",
	}];
	string keyword = 3 [(buf.validate.field).cel = {
		expression: "this.size() <= 100",
		message: "keyword must be less than or equal to 100",
	}];
	rabbit.enum.GlobalStatus status = 4;
	rabbit.enum.TemplateAPP app = 5;
}
message ListTemplateReply {
	repeated TemplateItem items = 1;
	int64 total = 2;
	int32 page = 3;
	int32 pageSize = 4;
}

