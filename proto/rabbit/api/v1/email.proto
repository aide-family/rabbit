syntax = "proto3";

package rabbit.api.v1;

import "google/api/annotations.proto";
import "buf/validate/validate.proto";
import "enum/enum.proto";

option go_package = "github.com/aide-family/rabbit/pkg/api/v1;v1";
option java_multiple_files = true;
option java_package = "rabbit.api.v1";

service Email {
	rpc CreateEmailConfig (CreateEmailConfigRequest) returns (CreateEmailConfigReply) {
		option (google.api.http) = {
			post: "/v1/email/config"
			body: "*"
		};
	}
	rpc UpdateEmailConfig (UpdateEmailConfigRequest) returns (UpdateEmailConfigReply) {
		option (google.api.http) = {
			put: "/v1/email/config/{uid}"
			body: "*"
		};
	}
	rpc UpdateEmailConfigStatus (UpdateEmailConfigStatusRequest) returns (UpdateEmailConfigStatusReply) {
		option (google.api.http) = {
			put: "/v1/email/config/{uid}/status"
			body: "*"
		};
	}
	rpc DeleteEmailConfig (DeleteEmailConfigRequest) returns (DeleteEmailConfigReply) {
		option (google.api.http) = {
			delete: "/v1/email/config/{uid}"
		};
	}
	rpc GetEmailConfig (GetEmailConfigRequest) returns (EmailConfigItem) {
		option (google.api.http) = {
			get: "/v1/email/config/{uid}"
		};
	}
	rpc ListEmailConfig (ListEmailConfigRequest) returns (ListEmailConfigReply) {
		option (google.api.http) = {
			get: "/v1/email/configs"
		};
	}
}

message EmailConfigItem {
	int64 uid = 1;
	string name = 2;
	string host = 3;
	int32 port = 4;
	string username = 5;
	string password = 6;
	string createdAt = 7;
	string updatedAt = 8;
	rabbit.enum.GlobalStatus status = 9;
}

message CreateEmailConfigRequest {
	string name = 1 [(buf.validate.field).required = true];
	string host = 2 [(buf.validate.field).required = true];
	int32 port = 3 [(buf.validate.field).required = true];
	string username = 4 [(buf.validate.field).required = true];
	string password = 5 [(buf.validate.field).required = true];
}
message CreateEmailConfigReply {}

message UpdateEmailConfigRequest {
	int64 uid = 1 [(buf.validate.field).required = true];
	string name = 2 [(buf.validate.field).required = true];
	string host = 3 [(buf.validate.field).required = true];
	int32 port = 4 [(buf.validate.field).required = true];
	string username = 5 [(buf.validate.field).required = true];
	string password = 6 [(buf.validate.field).required = true];
}
message UpdateEmailConfigReply {}

message UpdateEmailConfigStatusRequest {
	int64 uid = 1 [(buf.validate.field).required = true];
	rabbit.enum.GlobalStatus status = 2 [(buf.validate.field).required = true, (buf.validate.field).cel = {
		expression: "this in [rabbit.enum.GlobalStatus.ENABLED, rabbit.enum.GlobalStatus.DISABLED]",
		message: "status must be in ['ENABLED', 'DISABLED']",
	}];
}
message UpdateEmailConfigStatusReply {}

message DeleteEmailConfigRequest {
	int64 uid = 1 [(buf.validate.field).required = true];
}
message DeleteEmailConfigReply {}

message GetEmailConfigRequest {
	int64 uid = 1 [(buf.validate.field).required = true];
}

message ListEmailConfigRequest {
	int32 page = 1 [(buf.validate.field).required = true, (buf.validate.field).cel = {
		expression: "this >= 1",
		message: "page must be greater than or equal to 1",
	}];
	int32 pageSize = 2 [(buf.validate.field).required = true, (buf.validate.field).cel = {
		expression: "this >= 1 && this <= 200",
		message: "pageSize must be greater than or equal to 1 and less than or equal to 200",
	}];
	string keyword = 3 [(buf.validate.field).cel = {
		expression: "this.size() <= 100",
		message: "keyword must be less than or equal to 100",
	}];
	rabbit.enum.GlobalStatus status = 4;
}
message ListEmailConfigReply {
	repeated EmailConfigItem items = 1;
	int64 total = 2;
	int32 page = 3;
	int32 pageSize = 4;
}